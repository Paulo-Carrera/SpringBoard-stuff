JSONSCHEMA PACKAGE

Using the JSONSchema NPM Package in Express 
We'll be using the jsonschema npm package (links: npm and github).
- Install the package using : npm install jsonschema 

Rolling Your Own Validation Doesn't Always Scale
Let's assume you have a /books endpoint,
and a JSON payload to add a new book looks like this :
--------------------------------------------------------------------------------------
{
    "book": {
        "isbn" : "0691161518",
        "amazon-url" : "http:/a.co/eobPtX2",
        "author" : "Matthew Lane",
        "language" : "english",
        "pages" : 264,
        "publisher" : "Princeton University Press",
        "title" : "Power-Up: Unlocking Hidden Math in Video Games",
        "year" : 2017
    }
}
--------------------------------------------------------------------------------------


paulo@ThisPC22:~/SpringBoard/Intermediate-Express/API-Validation/jsonschema-package$ node
Welcome to Node.js v18.20.4.
Type ".help" for more information.
> const jsonschema = require('jsonschema')
undefined
> jsonschema
{
  Validator: [Function: Validator],
  ValidatorResult: [Function: ValidatorResult],
  ValidatorResultError: [Function: ValidatorResultError],
  ValidationError: [Function: ValidationError],
  SchemaError: [Function: SchemaError],
  SchemaScanResult: [Function: SchemaScanResult],
  scan: [Function: scan],
  validate: [Function (anonymous)]
}
> jsonschema.validate(123, {'type' : 'string'}).valid
false
> jsonschema.validate(123, {'type' : 'string'})
ValidatorResult {
  instance: 123,
  schema: { type: 'string' },
  options: {},
  path: [],
  propertyPath: 'instance',
  errors: [
    ValidationError {
      path: [],
      property: 'instance',
      message: 'is not of a type(s) string',
      schema: [Object],
      instance: 123,
      name: 'type',
      argument: [Array],
      stack: 'instance is not of a type(s) string'
    }
  ],
  throwError: undefined,
  throwFirst: undefined,
  throwAll: undefined,
  disableFormat: false
}