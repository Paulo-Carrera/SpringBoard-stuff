MOCKS

Mocking
When testing, you will commonly hear the term "mocking".
- Mocking is primarily used in unit testing 
- An object under test may have dependencies on other (complex) objects
- To isolate the behavior, you replace other objects 
  by mocks that simulate their behavior 
- This is useful if the real objects are impractical to incorporate
  into the unit test.


Advantages of mocking 
- It can be faster. 
    - You don't have to wait for an API response
    - You don't have to deal with rate limits.
- It makes your tests 'pure'. Whether they fail or pass depends 
  only on your code, not on anything externally built.


Challenges with mocking 
- It sometimes requires a convoluted setup 
- It is not always necessary and can be an over-optimization


Mocking with Jest
see dice.test.js 


What kinds of things can you mock ?
- AJAX requests 
- Reading / Writing to files 
- Impure functions like Math.random()

